Handing different text directions :
Many of the properties and values that have encountered so far in our CSS learning have been tied to the physical dimenisons of our screen. We create borders on the top, right, botton, and left of a box, for example. These physical dimensions map very neatly to content that is viewed horizonally, and by default the web tends to support left-to-right languages (e.g English or French) better than right-to-left languages (such as Arabic).
In recent years however, CSS has evolved in order to better support different directionality of content, including right-to-left but also top-to-bottom content (such as Japanesse) - these different directionalities are called writing modes. Aa you progress in your study and being to work with layout, an understanding of writing modes will be very helpful to you, therefore we will introduce them now.

Prerequisites : Basic computer literacy, basic software installed, basic knowledge of working with files, HTML basics (study Introduction to HTML), and an idea of how CSS works (study CSS first steps).
Objectie : To understand the importance of writing modes to modern CSS.

What are writing modes ?
A writing mode in CSS referes to whenthert the text is running horizontally or verticcally. The writing-mode property lets us switch from one writing mode to another. You don't need to be working in a language which uses a verticle writing mode to want to do this- you could also change the writing mode of parts of your layout for crative purpose.

In the example below we have a heading displayed using writing-mode: vertical-rl. The text now runs verticlally. Vertical text is common in graphics design , and can be a way to add a more intersting look and feel to your web design.

h1 { writing-mode: verticle-rl;}

<h1> Play with writing modes</h1>
The three possible values for the writing-mode property are:
-> horizontal-tb: Top-to-bottom block flow dirction. Sentences run horizontally.
-> vertical-rl : Right to left block flow dirction. Sentences run vertically.
-> verticl-lr : Left to right block flow direction. Sentences run vertically.

So the writing -mode property is in reality setting the direction in which block-level elementes are displayed on the page - either from top-to-bottom, right-to-left, or left-to-right. This then dicates the direction text flows in sentences.

Writing modes and block and inline layout :
We have already discussed block and inline layout, and the fact that some things display as block elements and others as inline elements. As we have seen des ibed above. block and inlinne is tied to the writing mode of th document, and not the physical screen. Block are only displayed fromt he top to bottom of the page if you are using a writing mode that displayes text horizontally, such as English.

If we look at an example thhis will become clear. In this next example I have two boxes that contain a heading and a paragraph. The first uses writing-mode : horizontal-tb. a writing mode that is written that is a writing mode that is written vertically and from right-to-left.

When we switch the writing mode, we are changing which direction is block and which is inline. In a horizontal-tb writing mode the lock direction runs from top to bottom; in a vertical-rl writing mode the block directions runs right-to-left horizontally. So the block dimension is always the direction blcok are displayed oknt he page in the writing mode in use. The inline dimenstion is always the direction a sentence flows.

This figure shows the two dimenstions when in horizontal writing mode.

This figure shows the two dimnesions in a vertical writing mode.

Once you start to look at CSS layout, and in particular the newer layout methods, this idea of block and inline becomes very important. WE will revisit it later on.

Directions :
In addition to writing mode we also hae text directions. As mentioned above, some language such as ARabic are written horizontally, but right-to-left. This is not soething you are likely to use in a creative sense - if you want to line something up on the right three are other ways to do s- however it is importat to understand this as part of the nature of CSS. The web is not just for language that are displayed left-to-right!

Due to the fact that writing mode and directions of text chnge, newer CSS layout methods do not refer to left and right, and top and bottom. instead they will talk about start and end along with this idea of iniline and block. Don't worry too much about that right now, but keep these ideas in mind as you start to look at layout; you will find it really helpful in your understanding of CSS.

Logical properties and values :
The reson to talk about writing modes and direction at this point in your learning is that we have alreay looked at a lot of properties that are tied to the physical dimensions of the screen, and these make more sense when in a horizontal writing mode.

Let's take a look at out two boxes again - one with a horizontal-tb writing mode and one with verticla-rl. I have given both of these boxes a width. You can see that wehn the box is the vertical writing mode, it still ahs a width, and this is causing the text to overflow.

What we really want in this scenario is to essentially swap height with width in accordance to the writing mode. When we're in a vertical writing mode we want the box to expand in the block dimension just like it does in the horizontal mode.

To make this easier, CSS has recently developed a set of mapped properties. These essentially replace physical properties - things like width and height - with logical , or flow relative versions.

The property mapped to width when in a horizontal writing mode is called inline-size - it refers to the size in the inline dimension. THe property for height is named block-size and in the size ini the block dimension. you can see how this wroks in the eample below where we have replaced width with inline-size.

Logical margin, border, and padding properteis :
In the last two lessons we have learned about the CSS box model, and CSS borders. In the margin, border, and padding properteis you will find many instances of physical properteis, for example margin-top, padding-left, and border-bottom. In the same way that we have mappings for width and height there are mappings for theese propeteis.

The margin-top propety in ampped to margin-block-start - this will always refer to the margin at the start of the block dimensions.

The padding-left property maps to padding-inline-start, the padding that is applied to the start of the inline direction. This will be where sentences start in what wrigin mode. The border-bottom property maps to border-block-end, which is the border at the end of the block dimension.

You can see a comparison between physical and logical properties below.

If you change the writing mode of the boxes by switching the writing-mode propety on .box to vertical-rl, you will see how the physical propeteis stay tied to their physical direction, whereas the logical properteis switch with the writing mode.

You can also see that the h2 has a black border-bottom. Can you work out hwo to make that bottom border always go below the text in both writing modes?

There are a huge number of properteis when you consider all of the individual border longhands, and you can see all of the mapped propeties on the MDN page for logical Properteis and Values.

Logical values :
We have so far looked at logical propety names. There are also some propeties that take physical values of top, right, bottom, and left. These values also have mappings, to logical values - block-strat, inline-end, block-end, and inline-start.

For example, you can float an image left to cause text to wrap roung the image. You could replace left with inline-strat as shown in the example below.

Change the writing mode this example vertical-rl to see what happends to the image. Change inline-start to inline-end to change the float.

Here we are also using logical margin values to ensure the margin is in the correct place no matter what the writing mode is.

Shoud yoiu use physical or logical properteis ?
The logical propeties and valus are newer thatn their physical equivalents, and therefore have only recently been implemented in browsers. You can chack any propety page on MDN to see how far back the borwser support goes. If you are not using multple writing modes, then for now you might logical versions for most hgings, as they make a lot of sense once yoiu also start dealing with layout methods such as flexbox and grid.

Test your skills !
You've reached the end of this article, but can you remeber the most important information? you can find some further tests to verify that you've retained this information before you move on-- see Test your skills : Writing modes and logical propeteis.

Summary :
The concepts explained in this lesson are becoming increasingly important in CSS. An understaind o the block and inline direction - and how text flow changes with a change in writing mode - will be very useful going forward. It will help you in understaing CSS even if you never use a wriign mode other than a horizontal one.

In the next article, we'll take a good look at overflow in CSS.

