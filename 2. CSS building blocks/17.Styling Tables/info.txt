Styling tables :
Styliing an HTML table isn't the most glamorous job in the world, but sometimes we all have to do it. This article provides a guide to making HTML tables look good, with some specific table styling techniques highlighted.

Prerequisites : HTML basics (study introduction to HTML), knowledge of HTML tables, and an idea of how CSS works (study CSS first steps).
Objective : To learn how to effectively style HTML tables.

A typical HTML table :
Let's start by looking at a typical HTML table. Well, I say typical - most HTML table examples are about shoes, or the wether, or employess; we decide to make thiings more interstingby making it about famous punk bands from the UK. The markup looks like so:

<table>
	<cpation>
		A summary of the Uk's most famous punk bands
	<caption>
	<thead>
		<tr>
			<tr scope="col">Band</th>
			<th scope="col">Year formed</th>
			<th scope="col">No. of Albums</th>
			<th scope="col">Most famous song</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<th scope="row"Buzzcoks</th>
			<td>1976</td>
			<td>9</td>
			<td>Ever fallen in love (with someone you shouldn't've)</td>
		<tr>
		<tr>
			<th scope="row">The Clash</th>
			<td>1976</td>
			<td>6</td>
			<td>Loddon Calling</td>
		</tr>
		
		<tr>
			<th scope="row">The Stranglers</th>
			<td>1974</td>
			<td>17</td>
			<td>No More Heros</td>
		</tr>
	</tbody>
	<tfoot>
		<tr>
			<th scope="row" colspan="2">Total albums</th>
			<td colspan="2">77</td>
		</tr>
	</tfoot>
</table>

The table is niclely marked up, easily styledable, and accessible, thanks too features such scope, <caption>, <thead>, <tbody>, etc. Unfortunaately, it doesn't look good when rendered on the screen (see it live at punk-bands-unstyled.html):

With only the default browser styling it looks cramped, hard to read, and boring, We need to use some CSS to fix this up.

Styling our table :
Let's work throuhg styling our table example together.

1. To start with, make a local copy of the sample markup, download the images (noise and leopardsikn), and put the three resulting files in a working director somewhere on your local computer.

2. Next, create a new file called style.css and save it in the same directory as your other files.
3. Link the CSS to the HTML by placing the following line of HTML inside your <head>:

Spacing and layout :
The first thing we need to do is sort out the spacing/layout - default table styling is so creamped! To do this, add the following CSS to yoiur style.css file:

table {
	table-layoiut : fixed;
	width:100%
	border-collapse: collapse;
	border: 3px solid purple;
}

thead th:nth-child(1) {
	width : 30%
}
thead th:nth-child(2) {
	width:20%;
}
thead th:nth-child(3) {
	width:15%;
}
thead th-nth-child(4) {
	width : 35%;
}
th,td {
	padding : 20px;
}

The most important parts to note are as follows :
-> A table-layout value of fixed is generally a good idea to set your table , as it makes the table behave a bit more predictalbly by default. Normally, table colums tend to be sized according to how much content they contain, which produces some strange result. With table-layotu: fixed, you can size your columns according to the width of their headings with the thead th:nth-child(n) (:nth-child) selector ("Select the n-th child that is a <th> element in a sequence, inside a <thead> element") and given them set percentage widths. The entire columns width follows the width of its heading, making for a nice way to size your table columns. Chris Ciyier discusses this technique in more detail in Fixed Table Layouts. We've coupled with a width of 100%, meaning that the table will fill any continer it is put in, and be nicely responsive (although it would still need some more work to get it good on narrow screen widths).
-> A border-collapse value of collapse is standard best practice for any table styling effort. By default, when you set borders on table elements, they will all have spacing betwwen them, as the below image illustrates:

This doesn't look very nice (although it might be the look you want, who knows?). With border-collapse: collapse; set the border collapse down into one, which looks such better:
-> We've put a border around the whole table, which is needed becuase we'll be putting some borders round the table header and footer later on - it looks really odd and disjointed when you don't have a border round the whole outside of the table and end up with gaps.
-> We've set some padding on the <th> and <td> elemeetns - this gives the data items some space to breath, making the table look a lot more legible.

At this point, out talle alreay looks a lot better:

Some simple typography :
Now we'll get our text sorted out a bit.

First of all, we've found a fount on Google Fonts that is suitable for a table about punk bands. You can go ther and find a different one if you like; you'll just have to replace our porivided <link> element and custom font-family. declaration with the ones Google Fonts gives you.

First, add the following <link> element into your HTML head, just above your existing <link> element:

<link href="" rel="stylesheet" type="text/css"/>
Now add the following CSS into your style.css file, below the previous addition.

html {
	font-family : "helvetica neue",
}
thead th, tfont-th {
	font-family : "Rock Salt",
}
th { 
	letter-spacing : 2px;
}

td {
	letter-spacing : 1px;
}
tbody td {
	text-align : center;
}

tfoot th {
	text-align: right;
}

There is nothing really specific to tables; we are generally tweaking the font styling to make things easier to read:

-> We have set a global sens-serif font stack; this is purely a stylistic choice. We've also set out custom font on the headings inside the <thead> and <tfoot> elements, for a nice grungy, punky look.

-> We've set some letter-spacing on the headins and cells, as we feel it aidsd readablilty. Again mostly a stylistic choice.

-> WE've center-aligned the text in the table cells inside the <tbody> so that they line up with the headins. By default, cells are given a text-align valu of left, and headins are given a value of center, but generally it looks better to have the alignments set the same for both. The default bold weight on the heading fonts is enough to differetiate their look.

-> We've right-aligned the heading inside the <tfoot> so that it is visually associated better with its data point.

The result looks a bit neaster:

Graphics and colors :
Now onto graphics and colors! Because the table is full of punk and attitude, we need to give it some bright imporsing styling to suit it. Don't worry, you don't have to make your tables this loud - you can opt for something more subtle and testeful.

Start by adding the following CSS to your style.css file, again at the bottom:

thead, tfoot {
	backkground: url(leparskin.jpg);
	color : white;
	text-shadow: 1px 1px 1px black;
}

thead th, tfoot th,
tfoot td {
	background: linear-gradient ( to bottom,	
		rgba(0,0,0,0.1),
		rgba(0,0,0,0.5)
	);
	border: 3px solid purple;
}

Again, there's nothing specific to tables here, but it is worthwhile to note a few things.

We've added a background-image to the <thead> and <tfoot>, and changed the color of all the text inside the head and footer to white (and iven it a text-shadow) so it is readable. You should always make sure text contrasts well with your background, so it is readable.

We've also added a liner gradient to the <th> and <td> elements inside the header and footer for a nice bit of texture, as well as giveing those elements a bringt purple border. It is useful to have multiple nested elements avaiable so you can layer styles on top of one another. Yes, we could uhave put both background images, but we decide to do it separately for the benefit of older browsers that don't support multiple background images on linear gradients.

Zebra strping :
We wanted to dedicate a separate section to showing yo how to impelemtn zebra strips - alternateing rows of ocolor that make the different data rows in your talbe easier to parse and read. ADD the following CSS to the bottom of your style.css file:

tbody tr:nth-child(odd) {
	background-color : #ff33cc;
}

tbody tr:nth-child(even) {
	background-color : #e495e4;
}
tbody tr {
	background-image : url(noise.png);
}
table {
	background-color : #ff33cc;
}

-> Eariler on you saw the :nth-child seclector being used to select specific child elements. It can also be given a formula as a parameter, so it will select a sequence of elements. The formula 2n+1 would select all the odd numbered children (1,3,5,etc) and the formula 2n would select all the even numbered children (2,4,6, etc.) WE've used the odd and even keywords in our code which do exactly the same things are the aforemeantioned formulae. In this case we re gibin the odd and even rows different (lurid) colors.
-> We've also added a repearitg background tile to all the body rows, which is just a bit noise ( a semi-transparent .png with a bit of visual distortion on it) to provide some texture.
-> Lastly, we've given the entire table a solid background color so that browsers that don't support the :nth-child selector still hae a background for thier body rows.

This color explosion results in the followig look:

Styling the caption :
There is one lat thing to do with our table - style the caption. To do this, add the following to the bottom of your style.css file:

caption {
	font-family : "Rock Salt",
	padding : 20px;
	font-style: italic;
	caption-side : bottom;
	color: #666;
	text-align : right;
	letter-spacing: 1px;
}

There is nothing remarkable here, except for the caption-side property, which has been given a value of bottom. This causes the caption to be positioned on the bottom of the table, which along with the other declarations gives us this final look (see it live at punk-bands-compete.html):

Table styling quick tips :
Before moving on, we thought we'd provide you with a quick list of the most useful poins illustrated above:

-> Make your table markup as simpel as possible, and keep things flexible, e.g by using percentges , so the design is more responsive.
-> Use table-layout: fixed to create a more predictable table layout that allows you to easily set column widths by setting width on their headins <th>).
-> Use border-collaps : collapse to make table elements borders collapse into each other, producing a neater and easier to control look.
-> Use <thad>, <tbody>, and <tfoot> to break up your table into logical chunks and provide extra places to apply CSS to , so it is easier to layer styles on top of one another if required.
-> Use zebra stripping to make alternative rows easier to read.
-> Use text-align to line up your <th> and <td> text, to make things neater and easier to follow.

Test your skills !
You've reached the end of this article, but can you remember that most important inforamtion? You cant find some further test to verify that you've retained this inforamion before yoiu move on - see Test your skills: Tables.

Summary :
With styling tables now behind us, we need something else to occupy our time. The next article explores debugging CSS - how to solve problems such as layouts not looking like they should , or properties not applyingg when you think they should. This includes information on using browsr DevTools to find solutions to your problems.


