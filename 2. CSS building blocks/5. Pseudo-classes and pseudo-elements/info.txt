Pseudo-classes and pseudo-elements :
The next set of selectors we will look at are referred to as pseduo-classes and pseudo-elements. There are a large number of these, and they often server quite specific purpose. Once you know how to use them, you can look at the list to see if there is something which works for the task you are trying to achieve. Once again the relevant MDN page for each selector is helpful in exmplaing browser support.

Prerequisites : Basic computer Literacy, basic software instlled, basic knowledge of working with files, HTML basics (study Introduction to HTML), and an idea of how CSS works (study CSS first steps).
Objective : To learn about the pseudo-class and pseudo-element selectos.

What is a pseduo-class ?
A pseudo-class is a selector taht selects elements that are in a specific state, e.g they are the first elemetn of their type, or they are being hoverred over by the mouse pointer. They tend to act as if you had applied a class to some part of your document, often helping you cut down on excess classes your markup, and giving you more flexible, maintainable code.

Pseduo-clases are keywords that start withi a colon. For example, :hover is a pseudo-class.

Simple pseudo-class example :
Let's look at a simple example. If we wanted to make the first paragraph is an article larger and bold we coluld add a class to theat paragraph and then add CSS to that class, as shown in the first example below:
However, this could be annoying to maintain - what if a new paragrph got added to the top of the document? WE'd need to move the class over to the new paragraph. Instead of adding the class, we could use the :first-child pseudo-class selector - this will always target the first child element in the article, and we will no longer need to edit the HTML (this way not always be possible anyway maybe due to it being generated by a CMS).

All pseudo-classes behave in this same kind of way. They targewt some bit of your document that is in a certain state, behaving as if you had added a class into your HTML. Take a look at some other example on MDN:

-> :last-child
-> :only-child
-> :invalid

Note : It is valid to write pseudo-classes and elements without any element selector preceding them. IN the example above, youk could write :first-child and the reule would apply to any element that is the first child of an <article> element, not just a paragraph first child - :first-child is equivalent to #:first-child. Howver, usually you want more control than that, so you need to be more specific.

User-action pseudo classes :
Some pseudo-classes only apply when the user interacts withi the document in some way. These user-action pseudo-classes, sometimes referred to as dynamic pseudo-classes, act as if a class had been added to the element when the user interacts with it. Examples include:

-> :hover - mentioned above; this only applies if the user moves their pointer over an element, typically a link.
-> :focus - only applies if the user focuses the element by clicking or using keyboard controls.

What is a pseudo-element ?
Pseudo-elements behave in a similar way. However, they act as if you had added a whole new HTML element into the markup, rather than applying a class to existing elemetns.

Pseudo-elements start with a double colon ::. :: before is an example of a pseudo-element.

Note : Some early pseudo-elements used the single colon syntax, so you may sometimes see this in cole or examples. Mordern browsers support the early pseduo-elements wiht singel - or double-colon syntax for backwards compatibility.

For example, If you wanted to select the first line of a paragraph you could wrap it in a <span> element and use an element selector; however, that would fail if the number of words you had wrapped were longer or shorter thatn the parent element's width. As we tend not to know how many words will fit on a line - as that will change if the screen width or font-size changes - it is impossible to robustly do this by adding HTML.

The ::first-line pseduo-elemetn selector will do this for you reliably - if the number of words increases or decreases it will still only select the first line.

It acts if a <span> was magically wrapped around that first formatted line, and updated each time the line length changed.

You can see that this selects the first line of both paragraphs.

Combining pseduo-classes and pseduo-elements 
If you wantted to make the first line of the first paragraph bold you could chain the :first-child and ::first-line selector together . Try editing the previous live example so it uses the following CSS. WE are saying that we want to select the first line, or the first <p> element, which is inside an <article> element.

article p:first-child::first-line {
	font-size : 120%;
	font-weight: bold;l
}

Generaing content with ::before and ::after 
There are a couple of special pseduo-elemments, which are used along with the content property to insert content into your document using CSS.

You could use these to insert a starting of text, such as in the live example below . Try changing the text value of the content property and see it change it change in the output. You could also change the ::before pseudo-element to ::after and see the text inserted at the end of the element instead of the begining.

Inserting strings of text from CSS isn't really something we do very often on the web however, as the text is inaccessible to some screen readers and might be hard for someone to find and edit in the furete.

A more valid use of these pseudo-elements is to insert an icon, for example the little arrow added in the example below, which is a visual indicator that we wouldn't want read out by a screen reader:

These pseudo-element are also frequently used to insert an empyt string, which can be stlyed just like any element on the page.

In this next exampel, we have added an empty string using the ::before pseudo-element. We have set this to display:block in order that we can style it with a width and hgith . We then use CSS to style it just like any element. You can play around with the CSS and chage how it looks and behaves.

The use of the ::before and ::afte3r pseudo-element along with the content property is referred to as "Generated Content" in CSS, and you will often see this technique being used for various tasks. A greate example is the site CSS Arrow Please, which helps you to genereate an arrow with CSS Looks at the CSS as you create your arrow and you will see the ::befoer and ::after pseudo-elements in use. Whenever you see these selectors, look at the content property to see what is being added to the HTML element.

Summary :
In this article we've itroductied CSS pseudo-classes and pseudo-elements , which are special types of selectos.

Pseudo-classes enable you to target an element when it's in a particlur state , as if you had added a class for the state to the DOM. Pseudo-elements act as if you had added a whole new element to the DOM, and enable you to style that. The ::before and ::after pseudo-elements enable you to insert content into the document using CSS.

In the next article, we'll learn about comibnators.

